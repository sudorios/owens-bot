generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model catalog {
  catalog_id     Int       @id(map: "pk_catalog")
  code           String    @db.VarChar(50)
  name           String    @db.VarChar(100)
  description    String?
  sort_order     Int?      @default(1)
  reference_code String?   @db.VarChar(50)
  value1         String?
  value2         String?
  prefix         String?   @db.VarChar(5)
  enabled        Boolean   @default(true)
  created        DateTime  @default(now()) @db.Timestamp(6)
  created_by     String?   @db.VarChar(100)
  modified       DateTime? @db.Timestamp(6)
  modified_by    String?   @db.VarChar(100)
}

model event {
  event_id   Int      @id(map: "Event_pkey") @default(autoincrement())
  guild_id   Int
  user_id    Int
  name       String
  state_code String   @db.VarChar
  created    DateTime @default(now())
  updated    DateTime
  season_id  Int?
  enabled    Boolean?
  created_by String?  @db.VarChar
  updated_by String?  @db.VarChar

  @@index([guild_id], map: "Event_guildId_idx")
  @@index([season_id], map: "Event_seasonId_idx")
  @@index([user_id], map: "Event_userId_idx")
}

model event_rating {
  event_rating_id Int      @id(map: "EventRating_pkey") @default(autoincrement())
  user_id         Int
  guild_id        Int
  rating          Decimal  @db.Decimal(3, 2)
  created_at      DateTime @default(now())
  updated_at      DateTime
  event           String   @db.VarChar
  enabled         Boolean?
  created_by      String?  @db.VarChar
  updated_by      String?  @db.VarChar

  @@unique([guild_id, event], map: "EventRating_guildId_event_key")
}

model event_rating_detail {
  erating_detail_id Int       @id(map: "EventRatingDetail_pkey") @default(autoincrement())
  rating            Int
  user_id           Int
  guild_id          Int
  event             String    @db.VarChar
  created           DateTime  @default(now())
  event_rating_id   Int
  updated           DateTime? @db.Timestamptz(6)
  enabled           Boolean?
  created_by        String?   @db.VarChar
  updated_by        String?   @db.VarChar

  @@unique([guild_id, user_id, event], map: "EventRatingDetail_guildId_userId_event_key")
}

model event_score {
  event_score_id Int      @id(map: "EventScore_pkey") @default(autoincrement())
  user_id        Int
  guild_id       Int
  event_id       Int
  points         Int
  created        DateTime @default(now())
  updated        DateTime
  created_by     String?  @db.VarChar
  updated_by     String?  @db.VarChar
  enabled        Boolean?
}

model event_winner {
  event_winner_id Int      @id(map: "EventWinner_pkey") @default(autoincrement())
  event_id        Int
  user_id         Int
  guild_id        Int
  points          Int
  created         DateTime @default(now())
  updated         DateTime
  created_by      String?  @db.VarChar
  updated_by      String?  @db.VarChar
  enabled         Boolean?

  @@unique([event_id, user_id], map: "EventWinner_eventId_userId_key")
}

model guild {
  id         Int      @id(map: "Guild_pkey") @default(autoincrement())
  guild_id   BigInt   @unique(map: "Guild_guildId_key")
  name       String
  created    DateTime @default(now())
  updated    DateTime
  enabled    Boolean?
  created_by String?  @db.VarChar
  updated_by String?  @db.VarChar
}

model guild_user {
  guild_user__id Int      @id(map: "GuildUser_pkey") @default(autoincrement())
  guild_id       Int
  user_id        Int
  points         Int      @default(0)
  last_position  Int      @default(0)
  position       Int      @default(0)
  created        DateTime @default(now())
  updated        DateTime
  enabled        Boolean?
  created_by     String?  @db.VarChar
  updated_by     String?  @db.VarChar

  @@unique([guild_id, user_id], map: "GuildUser_guildId_userId_key")
  @@index([guild_id], map: "GuildUser_guildId_idx")
  @@index([user_id], map: "GuildUser_userId_idx")
}

model match_rating {
  match_rating_id Int      @id(map: "MatchRating_pkey") @default(autoincrement())
  guild_id        Int
  rating          Decimal  @db.Decimal(3, 2)
  created         DateTime @default(now())
  updated         DateTime
  match           String
  enabled         Boolean?
  created_by      String?  @db.VarChar
  updated_by      String?  @db.VarChar

  @@unique([guild_id, match], map: "MatchRating_guildId_match_key")
}

model match_rating_detail {
  mrating_detail_id Int      @id(map: "MatchRatingDetail_pkey") @default(autoincrement())
  match_rating_id   Int
  user_id           Int
  rating            Decimal  @db.Decimal(3, 2)
  created           DateTime @default(now())
  updated           DateTime
  created_by        String?  @db.VarChar
  updated_by        String?  @db.VarChar
  enabled           Boolean?

  @@unique([user_id, match_rating_id], map: "MatchRatingDetail_userId_matchRatingId_key")
}

model prediction {
  prediction_id Int      @id(map: "Prediction_pkey") @default(autoincrement())
  user_id       Int
  guild_id      Int
  event_id      Int
  question_id   Int
  accuracy      Int
  created       DateTime @default(now())
  updated       DateTime
  option_id     Int?
  created_by    String?  @db.VarChar
  updated_by    String?  @db.VarChar
  enabled       Boolean?

  @@unique([question_id, user_id], map: "Prediction_questionId_userId_key")
  @@index([event_id], map: "Prediction_eventId_idx")
  @@index([guild_id], map: "Prediction_guildId_idx")
}

model question {
  question_id Int      @id(map: "Question_pkey") @default(autoincrement())
  event_id    Int
  question    String
  answer      String?
  points      Int
  created     DateTime @default(now())
  updated     DateTime
  message_id  String?
  channel_id  String?
  enabled     Boolean?
  created_by  String?  @db.VarChar
  updated_by  String?  @db.VarChar
}

model question_option {
  question_option_id Int       @id(map: "QuestionOption_pkey") @default(autoincrement())
  question_id        Int
  index              Int
  label              String
  created            DateTime? @db.Timestamptz(6)
  updated            DateTime? @db.Timestamptz(6)
  created_by         String?   @db.VarChar
  updated_by         String?   @db.VarChar
  enabled            Boolean?

  @@unique([question_id, index], map: "QuestionOption_questionId_index_key")
  @@index([question_id], map: "QuestionOption_questionId_idx")
}

model season {
  season_id  Int      @id(map: "Season_pkey") @default(autoincrement())
  guild_id   Int
  name       String
  start_date DateTime @default(now())
  end_date   DateTime @default(now())
  active     Boolean  @default(false)
  created    DateTime @default(now())
  updated    DateTime
  created_by String?  @db.VarChar
  updated_by String?  @db.VarChar
  enabeld    Boolean?
}

model season_score {
  season_score_id Int      @id(map: "SeasonScore_pkey") @default(autoincrement())
  season_id       Int
  user_id         Int
  guild_id        Int
  points          Int
  created         DateTime @default(now())
  updated         DateTime
  last_position   Int      @default(0)
  position        Int      @default(0)
  created_by      String?  @db.VarChar
  updated_by      String?  @db.VarChar
  enabled         Boolean?

  @@unique([season_id, user_id], map: "SeasonScore_seasonId_userId_key")
}

model usuario {
  id         Int       @id(map: "User_pkey") @default(autoincrement())
  user_id    BigInt    @unique(map: "User_userId_key")
  username   String
  url        String?
  created    DateTime? @default(now())
  email      String?
  updated    DateTime?
  enabled    Boolean?
  created_by String?   @db.VarChar
  updated_by String?   @db.VarChar
}
